name: Wireguard_provision
on:
  #push:
  #  branches:
  #    - main
  #    - master
  pull_request:
    branches:
      - main
      - master
  #To be able to run it manually    
  workflow_dispatch:

env:
  AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}

defaults:
 run:
   shell: bash
   working-directory: ./labs/aws/vpn/wireguard  

jobs:
  wireguard:
    name: Wireguard infra provisioning
    runs-on: ubuntu-22.04
    permissions:
      #packages: write
      contents: read
      id-token: write
    steps:
      - name: Check out code
        uses: actions/checkout@v3
          

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.7
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Initialize Terraform
        run: |
          terraform init -input=false
      - name: Terraform Validate
        run: |
          terraform validate
      - name: Terraform plan
        run: |
          terraform plan -var="AWS_SSH_KEY=${{ secrets.TF_VAR_AWS_SSH_KEY }}"
      - name: Terraform apply
        run: |
          terraform apply -auto-approve -input=false -var="AWS_SSH_KEY=${{ secrets.TF_VAR_AWS_SSH_KEY }}"
  ansible_lint:
    name: Provisioning ansible infra part
    runs-on: ubuntu-22.04
    steps:
      - name: Lint Ansible Playbook
        uses: ansible/ansible-lint-action@main
        with:
          targets: ""
  
  deployAnsible:
    needs: wireguard
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    #- uses: ./.github/actions/ansible
    - uses: ./github/actions/ansible
      with: 
        playbook: playbook.yml
        inventory: localhost
        