---
- name: install Docker
  hosts: wireguard
  #collections:
  #  - community.docker
  become: true
  #vars:
    #docker_repo: https://download.docker.com/linux/centos/docker-ce.repo
    #ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Install or update needed software
      package: 
        name:
          - docker
          #- python3-requests
          - python3-pip
          #- python3-docker
        state: present
        update_cache: yes
      when: ansible_distribution == "Amazon"
    #- name: Install collection community.network
    #  collections:
    #    - community.docker:3.1.0
    # - name: Install docker
    #   get_url:
    #     #url: https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
    #     url: https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}
    #     dest: /usr/local/bin/docker-compose
    #     mode: 'u+x,g+x'
    #     owner: ec2-user
    #     group: ec2-user
    - name: Install docker-compose package
      get_url:
        #url: https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
        owner: ec2-user
        group: ec2-user
    - name: Adding user to run docker commands without sudo
      user:
        name: "{{ item }}"
        append: yes
        groups: docker
        #groups: ec2-user
      become: true
      loop:
        - ec2-user
    - name: Create mount folder for wireguard
      file:
        path: /opt/wireguard
        state: directory
    
    - name: Delete defaults requests package
      package:
        name:
          - python3-requests
        state: absent
      when: ansible_distribution == "Amazon"
    
    #- name: instalar python3
    #  apt: name=python3.7 state=present

    - name: Install specified python requirements
      pip:
        name:
          - ansible-core==2.13.5
          - ansible-lint==6.7.0
          - jsondiff==2.0.0
          - passlib==1.7.4
          - PyYAML==6.0
          - docker==6.0.0
          #- requests==2.28.1
          #- docker-compose==1.29.2
        executable: pip3
    

    - name: Install ansible docker collection
      command: ansible-galaxy collection install community.docker
    
    - name: Install docker-compose
      command: pip3 install docker-compose==1.29.2
    
    #- name: Test path location
    #  command: cat docker-compose.yml
    
    - name: Starting services
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - docker
        - containerd
    
    # - name: Enable docker.service
    #   systemd:
    #     name: docker.service
    #     daemon_reload: true
    #     enabled: true

    # - name: Enable containerd.service
    #   systemd:
    #     name: containerd.service
    #     daemon_reload: true
    #     enabled: true
    
    #- name: Deploy wireguard docker-compose stack
    #  command: docker-compose -f docker-compose.yml up -d
   
    - name: Deploy wireguard docker-compose stack
      #docker_compose:
      community.docker.docker_compose:
        project_name: wireguard
        #project_src: "/home/ec2-user/"
        project_src: "/home/ec2-user/{{ item }}"
        #project_src: "/home/ec2-user"
        remove_orphans: yes
        files:
          - docker-compose.yml
        state: present
      #loop:
      #  - docker-compose.yml
        #files:  
        #  - docker-compose.yml
    